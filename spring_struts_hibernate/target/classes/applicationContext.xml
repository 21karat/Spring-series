<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="30" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="5" />
		<!-- 用于显示数据源监控中的sql语句监控 -->
		<property name="filters" value="stat" />
	</bean>
	<!-- 配置Hibernate的SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop><!-- 有表自动更新表结构，没有就创建表 -->
			</props>
		</property>

		<!-- 配置关联关系映射文件 -->
		<property name="mappingResources">
			<list>
				<value>spring/struts/hibernate/entity/Department.hbm.xml</value>
				<value>spring/struts/hibernate/entity/Employee.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置action，action交由spring管理 -->
	<bean id="employeeAction" class="spring.struts.hibernate.action.EmployeeAction" scope="prototype">
		<property name="employeeService" ref="employeeService"></property>
		<property name="departmentService" ref="departmentService"></property>
	</bean>
	<bean id="departmentAction" class="spring.struts.hibernate.action.DepartmentAction"
		scope="prototype">
		<property name="departmentService" ref="departmentService"></property>
	</bean>
	
	<!-- 配置业务层service -->
	<bean id="employeeService" class="spring.struts.hibernate.service.impl.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao"></property>
	</bean>
	<bean id="departmentService" class="spring.struts.hibernate.service.impl.DepartmentServiceImpl">
		<property name="departmentDao" ref="departmentDao"></property>
	</bean> 
	
	<!-- 配置dao -->
	<bean id="employeeDao" class="spring.struts.hibernate.dao.impl.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
    <bean id="departmentDao" class="spring.struts.hibernate.dao.impl.DepartmentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>